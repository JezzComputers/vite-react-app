name: Build and push Docker image to dockerhub

on:
  push:
    branches: [ "main" ]
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v4

    - name: Ensure cache directory exists
      run: mkdir -p /tmp/.buildx-cache

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Login to dockerhub
      uses: docker/login-action@v3
      with:
       username: ${{ vars.DOCKERHUB_USERNAME }}
       password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: arm64,amd64

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        driver: docker-container

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.17.0'  # Updated to match required node version

    - name: Build and push to dockerhub
      uses: docker/build-push-action@v5
      with:
       context: .
       push: true
       platforms: linux/amd64,linux/arm64
       tags: jezzcomputers/vite-react-app:latest
       cache-from: type=local,src=/tmp/.buildx-cache
       cache-to: type=local,dest=/tmp/.buildx-cache-new

    - name: Save Docker cache
      if: always()
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    needs: build
    name: Deploy to VPS via Tailscale
    runs-on: ubuntu-latest
    steps:
    - name: Connect Tailscale
      uses: tailscale/github-action@v2
      with:
        oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
        oauth-secret: ${{ secrets.TAILSCALE_AUTHKEY_SECRET }}
        tags: tag:ci

    - name: Deploy and Cleanup Docker image on Pi
      env:
        PI_PASSWORD: ${{ secrets.PI_PASSWORD }}
        DOCKERHUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
        DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      run: |
        sshpass -p "$PI_PASSWORD" ssh -o "StrictHostKeyChecking no" jeremy@${{ vars.TAILSCALE_IP }} \
        "echo $DOCKERHUB_TOKEN | docker login -u $DOCKERHUB_USERNAME --password-stdin && \
        cd ~ && sudo docker pull jezzcomputers/vite-react-app:latest && \
        if [ $(docker ps -a -q -f name=app) ]; then sudo docker stop app && sudo docker rm app; fi && \
        sudo docker run -d --restart unless-stopped --name app -p 80:80 jezzcomputers/vite-react-app:latest && \
        sudo tailscale down && sudo tailscale logout && exit"